package com.dawes.parte2;

import static org.junit.Assert.*;

import java.time.LocalDate;

import org.junit.BeforeClass;
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

import com.dawes.modelo.IngredientesVO;
import com.dawes.modelo.RecetaIngredientesVO;
import com.dawes.modelo.RecetaVO;
import com.dawes.serviciosImpl.ServicioIngredientesImpl;
import com.dawes.serviciosImpl.ServicioRecetaImpl;
import com.dawes.serviciosImpl.ServicioRecetaIngredientes;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class testParte2 {

	private static ServicioIngredientesImpl servicioIngredientes;
	private static ServicioRecetaImpl servicioRecetas;
	private static ServicioRecetaIngredientes servicioRecetaIngredientes;

	@BeforeClass
	public static void setUpBeforeClass() throws Exception {

		// conexiones necesarias para hacer los test
		servicioIngredientes = new ServicioIngredientesImpl();
		servicioRecetas = new ServicioRecetaImpl();
		servicioRecetaIngredientes = new ServicioRecetaIngredientes();

	}

	@Test
	public void test1InsertarIngrediente() {
		// introducimos un ingrediente sin ID (lo crea automaticamente la BD)
		IngredientesVO ingrediente = new IngredientesVO("platano", "hidratos");
		assertEquals(1, servicioIngredientes.insertarIngrediente(ingrediente));
	}

	@Test
	public void test2InsertarRecetas() {
		// introducimos un ingrediente sin ID (lo crea automaticamente la BD)
		RecetaVO receta = new RecetaVO("platano con mantequilla", "platano recubierto de mantequilla de cacahuete",
				LocalDate.now(), "Postre");

		assertEquals(1, servicioRecetas.crearReceta(receta));
	}

	@Test
	public void test3AsignarIngrediente() {
		// buscamos las recetas que hemos introducido mas arriba,
		// para obtener su id
		RecetaVO receta = servicioRecetas.mostrarReceta("platano con mantequilla");
		IngredientesVO ingrediente = servicioIngredientes.mostrarIngrediente("platano");

		// creamos una relacion entre las dos
		RecetaIngredientesVO relacionPrueba = new RecetaIngredientesVO(200, receta, ingrediente);

		//probamos
		assertEquals(1, servicioRecetaIngredientes.insertarRelacion(relacionPrueba, ingrediente, receta));
	}

}
